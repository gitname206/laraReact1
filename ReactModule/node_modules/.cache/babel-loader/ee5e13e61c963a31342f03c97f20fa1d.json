{"ast":null,"code":"import React, { Component } from 'react'; //import NavBar from './components/navbar';\n\nimport './App.css'; //import Counters from './components/counters';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 232\n      }, {\n        id: 2,\n        value: 33\n      }, {\n        id: 3,\n        value: 1\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n    this.state = {\n      items: [],\n      isLoaded: false\n      /*\n      super();\n      console.log('App - Constructor');\n      //this.state = this.props.something;\n      */\n\n    };\n  }\n\n  componentDidMount() {\n    // fetch('http://localhost:8000/api/movies')\n    //fetch('https://crm.zoho.com/crm/private/json/SalesOrders/getRecords?t&scope=crmapi&authtoken=bde93b7b47b5386350482676fc232c93&id=2598070000030053177')\n    fetch('http://jsonplaceholder.typicode.com/users').then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json\n      });\n    });\n  }\n  /*\n  componentDidMount(){\n    console.log('App - Mounted');\n  }\n  \n  \n  handleIncrement = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = {...counter};\n      counters[index].value++;\n      this.setState({counters});\n  };\n  \n  handleReset = () => {\n    const counters = this.state.counters.map(c=> {\n          c.value = 0;\n          return c;\n      });\n      this.setState({counters});\n  };\n  \n  handleDelete = (counterId) => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({counters});\n  };\n  */\n\n\n  render() {\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n    return isLoaded;\n    /*\n    if(!isLoaded){\n      return <div>Loading...</div>;\n    }else{\n    return (\n      <div className=\"App\">\n        <ul>\n          {items.map(item =>(\n            <li key={item.id}>\n              Name: {item.id} | Email: {item.body}\n            </li>\n          ))};\n        </ul>\n      </div>\n    );\n    }\n    */\n\n    /*\n    console.log(\"App - Rendered\");\n    return (\n      <React.Fragment>\n      <NavBar totalCounters={this.state.counters.filter(c =>c.value >0).length}/>\n      <main className=\"container\">\n        <Counters \n        counters={this.state.counters}\n        onReset={this.handleReset}\n        onIncrement={this.handleIncrement}\n        onDelete={this.handleDelete}\n        />\n      </main>\n      </React.Fragment>\n    );\n    */\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\ReactLaravel\\ReactModule\\src\\App.js"],"names":["React","Component","App","constructor","props","state","counters","id","value","items","isLoaded","componentDidMount","fetch","then","res","json","setState","render"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAO,WAAP,C,CACA;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAU5BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SATjBC,KASiB,GATT;AACNC,MAAAA,QAAQ,EAAC,CACL;AAACC,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,KAAK,EAAC;AAAb,OADK,EAEL;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,KAAK,EAAC;AAAb,OAFK,EAGL;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,KAAK,EAAC;AAAb,OAHK,EAIL;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,KAAK,EAAC;AAAb,OAJK;AADH,KASS;AAEjB,SAAKH,KAAL,GAAa;AACXI,MAAAA,KAAK,EAAC,EADK;AAEXC,MAAAA,QAAQ,EAAC;AAEX;;;;;;AAJa,KAAb;AASD;;AAEDC,EAAAA,iBAAiB,GAAE;AAClB;AACA;AACCC,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAC,IADG;AAEZD,QAAAA,KAAK,EAACM;AAFM,OAAd;AAID,KAPD;AASD;AAGD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BEE,EAAAA,MAAM,GAAE;AAAA,sBACgB,KAAKZ,KADrB;AAAA,QACDK,QADC,eACDA,QADC;AAAA,QACSD,KADT,eACSA,KADT;AAEN,WAAQC,QAAR;AACA;;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;AAgBD;;AArGyB;;AAwG5B,eAAeR,GAAf","sourcesContent":["import React, {Component} from 'react';\n//import NavBar from './components/navbar';\nimport './App.css';\n//import Counters from './components/counters';\n\nclass App extends Component {\n  state = {\n    counters:[\n        {id:1, value:232},\n        {id:2, value:33},\n        {id:3, value:1},\n        {id:4, value:0}\n    ]\n}\n\nconstructor(props) {\n  super(props);\n  this.state = {\n    items:[],\n    isLoaded:false,\n  }\n  /*\n  super();\n  console.log('App - Constructor');\n  //this.state = this.props.something;\n*/\n}\n\ncomponentDidMount(){\n // fetch('http://localhost:8000/api/movies')\n //fetch('https://crm.zoho.com/crm/private/json/SalesOrders/getRecords?t&scope=crmapi&authtoken=bde93b7b47b5386350482676fc232c93&id=2598070000030053177')\n  fetch('http://jsonplaceholder.typicode.com/users')\n  .then(res => res.json())\n  .then(json => {\n    this.setState({\n      isLoaded:true,\n      items:json,\n    })\n  });\n  \n}\n\n\n/*\ncomponentDidMount(){\n  console.log('App - Mounted');\n}\n\n\nhandleIncrement = counter => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = {...counter};\n    counters[index].value++;\n    this.setState({counters});\n};\n\nhandleReset = () => {\n  const counters = this.state.counters.map(c=> {\n        c.value = 0;\n        return c;\n    });\n    this.setState({counters});\n};\n\nhandleDelete = (counterId) => {\n    const counters = this.state.counters.filter(c => c.id !== counterId);\n    this.setState({counters});\n};\n*/\n  render(){\n    var {isLoaded, items}=this.state;\n    return (isLoaded)\n    /*\n    if(!isLoaded){\n      return <div>Loading...</div>;\n    }else{\n    return (\n      <div className=\"App\">\n        <ul>\n          {items.map(item =>(\n            <li key={item.id}>\n              Name: {item.id} | Email: {item.body}\n            </li>\n          ))};\n        </ul>\n      </div>\n    );\n    }\n    */\n    /*\n    console.log(\"App - Rendered\");\n    return (\n      <React.Fragment>\n      <NavBar totalCounters={this.state.counters.filter(c =>c.value >0).length}/>\n      <main className=\"container\">\n        <Counters \n        counters={this.state.counters}\n        onReset={this.handleReset}\n        onIncrement={this.handleIncrement}\n        onDelete={this.handleDelete}\n        />\n      </main>\n      </React.Fragment>\n    );\n    */\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}