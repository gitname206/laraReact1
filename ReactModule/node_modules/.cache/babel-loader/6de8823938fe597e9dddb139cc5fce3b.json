{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ReactLaravel\\\\ReactModule\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: this.props.value\n    };\n    this.styles = {\n      fontSize: 30,\n      fontWeight: \"bold\"\n    };\n\n    this.handleIncrement = () => {\n      this.setState({\n        count: this.state.value + 1\n      });\n    };\n  }\n\n  render() {\n    console.log(\"props\", this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \" \", this.props.id), React.createElement(\"span\", {\n      className: this.getBadgeClasses(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.formatCount()), React.createElement(\"button\", {\n      onClick: () => this.handleIncrement,\n      className: \"btn btn-secondary btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Increment\"));\n  }\n\n  renderTags() {\n    if (this.state.tags.length === 0) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"There are no tags!\");\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.state.tags.map(tag => React.createElement(\"li\", {\n      key: tag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, tag)));\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const value = this.state.value;\n    return value === 0 ? \"Zero\" : value;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\ReactLaravel\\ReactModule\\src\\components\\counter.jsx"],"names":["React","Component","Counter","state","value","props","styles","fontSize","fontWeight","handleIncrement","setState","count","render","console","log","id","getBadgeClasses","formatCount","renderTags","tags","length","map","tag","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACtB;AACHC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD;AADf,KADsB;AAAA,SAK5BE,MAL4B,GAKrB;AACHC,MAAAA,QAAQ,EAAC,EADN;AAEHC,MAAAA,UAAU,EAAC;AAFR,KALqB;;AAAA,SAS5BC,eAT4B,GASV,MAAK;AACnB,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,KAAX,GAAiB;AAAzB,OAAd;AACH,KAX2B;AAAA;;AAa5BQ,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKT,KAA1B;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAM,KAAKA,KAAL,CAAWU,EAAjB,CADH,EAEI;AAAM,MAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKC,WAAL,EAA1C,CAFJ,EAGI;AACI,MAAA,OAAO,EAAG,MAAK,KAAKR,eADxB;AAEI,MAAA,SAAS,EAAC,0BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,CADJ;AAWH;;AACDS,EAAAA,UAAU,GAAE;AACR,QAAG,KAAKf,KAAL,CAAWgB,IAAX,CAAgBC,MAAhB,KAAyB,CAA5B,EAA+B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AAC/B,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKjB,KAAL,CAAWgB,IAAX,CAAgBE,GAAhB,CAAoBC,GAAG,IAAE;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,CAAzB,CAAL,CAAP;AACH;;AACDN,EAAAA,eAAe,GAAG;AACd,QAAIO,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKpB,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,WAAOmB,OAAP;AACH;;AAEDN,EAAAA,WAAW,GAAE;AAAA,UACFb,KADE,GACK,KAAKD,KADV,CACFC,KADE;AAET,WAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH;;AAxC2B;;AA2ChC,eAAeF,OAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Counter extends Component {\r\n    state={\r\n       value: this.props.value\r\n    };\r\n\r\n    styles={\r\n        fontSize:30,\r\n        fontWeight:\"bold\"\r\n    };\r\n    handleIncrement = () =>{\r\n        this.setState({count: this.state.value+1});\r\n    };\r\n\r\n    render() {\r\n        console.log(\"props\", this.props);\r\n        return (\r\n            <div>\r\n               <h4> {this.props.id}</h4>\r\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n                <button \r\n                    onClick={ () =>this.handleIncrement} \r\n                    className=\"btn btn-secondary btn-sm\">\r\n                        Increment\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n    renderTags(){\r\n        if(this.state.tags.length===0) return <p>There are no tags!</p>;\r\n        return <ul>{this.state.tags.map(tag=><li key={tag}>{tag}</li>)}</ul>\r\n    }\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 badge-\";\r\n        classes += this.state.value === 0 ? \"warning\" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount(){\r\n        const {value}=this.state;\r\n        return value === 0 ? \"Zero\" : value;\r\n    }\r\n}\r\n\r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}